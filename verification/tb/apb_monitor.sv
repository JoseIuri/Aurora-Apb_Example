/**
  ******************************************************************************
  * File automatic generated by XGeneratorTB software
  ******************************************************************************
**/
class apb_monitor extends uvm_monitor;

    // Attributes
    virtual apb_interface apb_if_vif;
    uvm_analysis_port #(apb_transaction) req;
    uvm_analysis_port #(apb_transaction) resp;
    string                              tID;

    protected apb_transaction transCollected;

    `uvm_component_utils_begin(apb_monitor)
    `uvm_component_utils_end

    ////////////////////////////////////////////////////////////////////////////////
    // Implementation
    //------------------------------------------------------------------------------
    function new(string name="apb_monitor", uvm_component parent=null);
        super.new(name, parent);
        this.transCollected = apb_transaction::type_id::create("transCollected");

        this.tID = get_type_name().toupper();
        this.req = new("req", this);
        this.resp = new("resp", this);
    endfunction: new

    function build_phase(uvm_phase phase);
        super.build_phase(phase);
        `uvm_info(tID, $sformatf("build_phase begin ..."), UVM_HIGH)
        if (!(uvm_config_db#(virtual apb_interface)::get(this, "", "VIRTUAL_IF", |INTERFACE_INSTANCE|_vif))) begin
            `uvm_fatal("NOVIF", {"virtual interface must be set for: ", get_full_name(), ".apb_if_vif"})
        end

    endfunction : build_phase

    task run_phase(uvm_phase phase);
        this.CollectTransactions(phase); // collector task
    endtask: run_phase

    task CollectTransactions(uvm_phase phase);

        forever begin
            phase.raise_objection(this);

            this.BusToTransaction();

            this.req.write(transCollected);
            this.resp.write(transCollected);

            phase.drop_objection(this);
        end
    endtask : CollectTransactions

    function void BusToTransaction();
        
    endfunction : BusToTransaction

endclass: apb_monitor
